def count_beautiful_points(n, k):
    """
    Counts the number of permutations of size n with exactly k beautiful points.

    Args:
        n: The size of the permutation (1 <= n <= 9).
        k: The number of beautiful points (0 <= k <= n).

    Returns:
        The number of permutations with exactly k beautiful points.
    """

    dp = [[0] * (k + 1) for _ in range(n + 1)]

    # Base cases
    for i in range(1, n + 1):
        dp[i][1] = 1  # One permutation with i as the only beautiful point

    # Build the DP table
    for i in range(2, n + 1):
        for j in range(2, min(k + 1, i) + 1):
            dp[i][j] = dp[i - 1][j] + (j - 1) * dp[i - 1][j - 1]

    return dp[n][k]

# Read input and print the result
n, k = map(int, input().split())
result = count_beautiful_points(n, k)
print(result)
